{
  "name": "runme",
  "version": "1.11.0",
  "publisher": "stateful",
  "displayName": "Runme runs Markdown",
  "description": "Execute commands inside your runbooks, docs, and READMEs.",
  "author": "Sebastian Tiedtke <sebastian@stateful.com>",
  "contributors": [
    "Christian Bromann <christian@stateful.com>"
  ],
  "icon": "assets/icon.gif",
  "license": "Apache-2.0",
  "homepage": "https://runme.dev",
  "repository": {
    "type": "git",
    "url": "git://github.com/stateful/vscode-runme.git"
  },
  "bugs": {
    "url": "https://github.com/stateful/vscode-runme/issues"
  },
  "private": true,
  "engines": {
    "vscode": "^1.72.0"
  },
  "galleryBanner": {
    "color": "#0D003D",
    "theme": "dark"
  },
  "keywords": [
    "runme",
    "readme",
    "runbooks",
    "jupyter",
    "documentation",
    "terminal",
    "cli",
    "shell",
    "bash",
    "markdown"
  ],
  "badges": [
    {
      "url": "https://img.shields.io/badge/Runme-Join%20our%20Community-blue?logo=discord&color=F62459",
      "href": "https://discord.gg/runme",
      "description": "Join the Runme Community"
    }
  ],
  "categories": [
    "Notebooks",
    "Other"
  ],
  "activationEvents": [
    "onNotebook:runme",
    "onRenderer:runme-renderer",
    "onCommand:runme.welcome",
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "runme.new",
        "title": "Runme Notebook"
      },
      {
        "command": "runme.toggleTerminal",
        "title": "Toggle Terminal For Cell"
      },
      {
        "command": "runme.openIntegratedTerminal",
        "title": "Open Integrated Terminal for Background Task"
      },
      {
        "command": "runme.copyCellToClipboard",
        "title": "Copy Cell Content into Clipboard"
      },
      {
        "command": "runme.toggleCellAnnotations",
        "title": "Toggle cell configuration UI"
      },
      {
        "command": "runme.runCliCommand",
        "title": "Run CLI command in new terminal"
      },
      {
        "command": "runme.resetEnv",
        "category": "Runme",
        "title": "Reset Environment Variables for current VS Code session"
      },
      {
        "command": "runme.surveyWinDefaultShell",
        "category": "Runme",
        "title": "Prompt to participate in Windows Default Shell survey"
      },
      {
        "command": "runme.surveyActiveUserFeedback",
        "category": "Runme",
        "title": "Prompt to participate in Feedback survey"
      },
      {
        "command": "runme.surveyFeedbackButton",
        "category": "Runme",
        "title": "Send Feedback",
        "icon": "$(feedback)"
      },
      {
        "command": "runme.surveyShebangComingSoon",
        "category": "Runme",
        "title": "Prompt when a cell language is unsupported"
      },
      {
        "command": "runme.openAsRunmeNotebook",
        "category": "Runme",
        "title": "Open markdown as Runme",
        "icon": {
          "dark": "assets/runme-logo-open-dark.svg",
          "light": "assets/runme-logo-open-light.svg"
        }
      },
      {
        "command": "runme.openSplitViewAsMarkdownText",
        "category": "Runme",
        "title": "Open Runme notebook in text editor",
        "icon": "$(markdown)"
      },
      {
        "command": "runme.stopBackgroundTask",
        "category": "Runme",
        "title": "Dispose terminal session to stop background task."
      },
      {
        "command": "runme.collapseTreeView",
        "category": "Runme",
        "title": "Collapse all items",
        "icon": "$(debug-collapse-all)"
      },
      {
        "command": "runme.expandTreeView",
        "category": "Runme",
        "title": "Expand all items",
        "icon": "$(search-expand-results)"
      },
      {
        "command": "runme.welcome",
        "title": "Welcome",
        "category": "Runme",
        "description": "Open the welcome page for the Runme extension."
      },
      {
        "command": "runme.try",
        "title": "Try Runme",
        "category": "Runme",
        "description": "Walk through some interactive notebook examples."
      },
      {
        "command": "runme.codelens.action",
        "title": "Runme CodeLens Action"
      },
      {
        "command": "runme.file.openInRunme",
        "title": "Open in Runme"
      },
      {
        "command": "runme.authenticateWithGitHub",
        "title": "Authenticate Runme with GitHub",
        "category": "Runme",
        "description": "Give access to Runme to interact with GitHub API"
      },
      {
        "command": "runme.runCategory",
        "category": "Runme",
        "title": "Run by Category",
        "icon": "$(group-by-ref-type)"
      },
      {
        "command": "runme.runCellCategory",
        "category": "Runme",
        "title": "Run cells with the same Category",
        "icon": "$(group-by-ref-type)"
      },
      {
        "command": "runme.addToRecommendedExtensions",
        "title": "Add Runme to recommended extensions",
        "category": "Runme"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "runme.toggleTerminal",
          "when": "false"
        },
        {
          "command": "runme.openIntegratedTerminal",
          "when": "false"
        },
        {
          "command": "runme.openAsRunmeNotebook",
          "when": "false"
        },
        {
          "command": "runme.openSplitViewAsMarkdownText",
          "when": "false"
        },
        {
          "command": "runme.stopBackgroundTask",
          "when": "false"
        },
        {
          "command": "runme.collapseTreeView",
          "when": "false"
        },
        {
          "command": "runme.expandTreeView",
          "when": "false"
        },
        {
          "command": "runme.codelens.action",
          "when": "false"
        },
        {
          "command": "runme.file.openInRunme",
          "when": "false"
        },
        {
          "command": "runme.runCategory",
          "when": "false"
        },
        {
          "command": "runme.runCellCategory",
          "when": "false"
        },
        {
          "command": "runme.surveyFeedbackButton",
          "when": "false"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == markdown && !notebookType",
          "command": "runme.openAsRunmeNotebook",
          "group": "navigation"
        },
        {
          "when": "notebookType == runme",
          "command": "runme.openSplitViewAsMarkdownText",
          "group": "navigation"
        }
      ],
      "file/newFile": [
        {
          "command": "runme.new",
          "group": "notebook"
        }
      ],
      "view/title": [
        {
          "command": "runme.collapseTreeView",
          "when": "view == runme.launcher && runme.launcher.isExpanded",
          "group": "navigation"
        },
        {
          "command": "runme.expandTreeView",
          "when": "view == runme.launcher && !runme.launcher.isExpanded",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "command": "runme.file.openInRunme",
          "when": "resourceLangId == markdown",
          "group": "navigation@30"
        }
      ],
      "notebook/toolbar": [
        {
          "command": "runme.surveyFeedbackButton",
          "when": "notebookType == runme",
          "group": "navigation"
        },
        {
          "command": "runme.runCategory",
          "when": "notebookType == runme && notebookHasCategories",
          "group": "navigation"
        }
      ],
      "notebook/cell/execute": [
        {
          "command": "runme.runCellCategory",
          "group": "navigation",
          "when": "notebookType == runme && notebookHasCategories"
        }
      ]
    },
    "languages": [
      {
        "id": "markdown",
        "extensions": [
          ".mdi",
          ".mdr",
          ".run",
          ".runme"
        ]
      }
    ],
    "notebooks": [
      {
        "type": "runme",
        "displayName": "Run your Markdown",
        "selector": [
          {
            "filenamePattern": "*.md"
          },
          {
            "filenamePattern": "*.mdx"
          },
          {
            "filenamePattern": "*.mdi"
          },
          {
            "filenamePattern": "*.mdr"
          },
          {
            "filenamePattern": "*.run"
          },
          {
            "filenamePattern": "*.runme"
          }
        ]
      }
    ],
    "notebookRenderer": [
      {
        "id": "runme-renderer",
        "entrypoint": "./out/client.js",
        "displayName": "runme renderer",
        "mimeTypes": [
          "stateful.runme/shell-stdout",
          "stateful.runme/vercel-stdout",
          "stateful.runme/deno-stdout",
          "stateful.runme/html-stdout",
          "stateful.runme/output-items",
          "stateful.runme/annotations",
          "stateful.runme/terminal",
          "stateful.runme/error",
          "stateful.runme/github-stdout"
        ],
        "requiresMessaging": "optional"
      }
    ],
    "configuration": [
      {
        "title": "Runme",
        "properties": {
          "runme.flags.disableSaveRestriction": {
            "type": "boolean",
            "scope": "machine",
            "default": true,
            "markdownDescription": "If enabled, Runme's save restriction on non checked-in files will be lifted."
          },
          "runme.flags.startFile": {
            "type": "string",
            "scope": "window",
            "markdownDescription": "Relative path to a file within the workspace to open within a Runme notebook view, when VS Code starts (e.g. `./CONTRIBUTING.md`)."
          },
          "runme.experiments.grpcSerializer": {
            "type": "boolean",
            "scope": "machine",
            "default": true,
            "markdownDescription": "If set to `true`, the notebook serialization will use the GRPC instead of the WebAssembly interface."
          },
          "runme.experiments.grpcRunner": {
            "type": "boolean",
            "scope": "machine",
            "default": true,
            "markdownDescription": "If set to `true`, the notebook runner will use the GRPC interface (except on Windows)."
          },
          "runme.experiments.grpcServer": {
            "type": "boolean",
            "scope": "machine",
            "default": true,
            "markdownDescription": "If set to `true`, the extension will bring up the GRPC server."
          },
          "runme.checkout.projectDir": {
            "type": "string",
            "scope": "machine",
            "markdownDescription": "Directory to which Runme should clone new projects into."
          },
          "runme.checkout.timeout": {
            "type": "number",
            "scope": "machine",
            "default": 60000,
            "markdownDescription": "Timeout until Runme will cancel the clone process."
          },
          "runme.server.customAddress": {
            "type": "string",
            "scope": "window",
            "markdownDescription": "Custom runme server address. This address will be used instead of launching the server at start. Use this only if you know what you are doing!"
          },
          "runme.server.binaryPath": {
            "type": "string",
            "scope": "window",
            "markdownDescription": "Runme server path to binary. (It requires the GRPC interface enabled)"
          },
          "runme.server.enableLogger": {
            "type": "boolean",
            "scope": "machine",
            "default": false,
            "markdownDescription": "Enable Runme server logs. (It requires the GRPC interface enabled)"
          },
          "runme.server.tlsDir": {
            "type": "string",
            "scope": "window",
            "markdownDescription": "Directory for storing TLS certificates for GRPC interface"
          },
          "runme.server.enableTLS": {
            "type": "boolean",
            "scope": "machine",
            "default": true,
            "markdownDescription": "Use TLS over GRPC server interface (strongly recommended - only disable if you know what you are doing!!!)"
          },
          "runme.server.transportType": {
            "type": "string",
            "scope": "window",
            "default": "TCP",
            "enum": [
              "TCP",
              "UDS"
            ],
            "markdownDescription": "Connect to GRPC server via TCP or Unix Domain Socket (restart required - not available on Windows)"
          },
          "runme.server.persistIdentity": {
            "type": "number",
            "scope": "window",
            "default": 0,
            "enum": [
              0,
              1,
              2,
              3
            ],
            "enumItemLabels": [
              "None",
              "All",
              "Document",
              "Cell"
            ],
            "markdownDescription": "Select whether or not identities of document and/or cells should be presistent inside markdown"
          },
          "runme.terminal.backgroundTask": {
            "type": "boolean",
            "scope": "machine",
            "default": true,
            "markdownDescription": "Enable Runme notebook terminal in background tasks (experimental)"
          },
          "runme.terminal.nonInteractive": {
            "type": "boolean",
            "scope": "machine",
            "default": false,
            "markdownDescription": "Enable Runme notebook terminal in non-interactive scripts (experimental)"
          },
          "runme.terminal.interactive": {
            "type": "boolean",
            "scope": "machine",
            "default": true,
            "markdownDescription": "Enable Runme notebook terminal in interactive scripts (experimental)"
          },
          "runme.terminal.fontSize": {
            "type": [
              "number",
              "null"
            ],
            "default": null,
            "markdownDescription": "Font size of Runme notebook terminal"
          },
          "runme.terminal.fontFamily": {
            "type": [
              "string",
              "null"
            ],
            "default": null,
            "markdownDescription": "Font family of Runme notebook terminal"
          },
          "runme.terminal.cursorStyle": {
            "type": "string",
            "enum": [
              "block",
              "bar",
              "underline"
            ],
            "default": "bar",
            "markdownDescription": "The style of the Runme notebook terminal cursor."
          },
          "runme.terminal.cursorBlink": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Defines whether the Runme notebook terminal cursor blinks."
          },
          "runme.terminal.cursorWidth": {
            "type": "number",
            "default": 1,
            "markdownDescription": "The width of the cursor in CSS pixels when `cursorStyle` is set to 'bar'."
          },
          "runme.terminal.smoothScrollDuration": {
            "type": "number",
            "default": 0,
            "markdownDescription": "The duration to smoothly scroll between the origin and the target in milliseconds. Set to 0 to disable smooth scrolling and scroll instantly."
          },
          "runme.terminal.scrollback": {
            "type": "number",
            "default": 1000,
            "markdownDescription": "The amount of scrollback in the terminal. Scrollback is the amount of rows that are retained when lines are scrolled beyond the initial viewport."
          },
          "runme.terminal.rows": {
            "type": "integer",
            "default": 10,
            "markdownDescription": "Default number of rows in notebook terminal"
          },
          "runme.actions.openViewInEditor": {
            "type": "string",
            "default": "split",
            "enum": [
              "split",
              "toggle"
            ],
            "enumDescriptions": [
              "Opens text editor to the side",
              "Will replace notebook view with text editor"
            ],
            "markdownDescription": "Default behavior of Open In Editor action button"
          },
          "runme.codelens.enable": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable CodeLens support in markdown documents"
          },
          "runme.env.workspaceFileOrder": {
            "type": "array",
            "default": [
              ".env.local",
              ".env"
            ],
            "markdownDescription": "List of workspace environment files to parse in order; variables defined in later files take priority"
          },
          "runme.env.loadWorkspaceFiles": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Load environment files from workspace into all scripts"
          },
          "runme.cli.useIntegratedRunme": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "Whether to use full path to integrated runme executable when running CLI commands. This is mostly useful for development purposes."
          },
          "runme.app.baseDomain": {
            "type": "string",
            "default": "",
            "scope": "window",
            "markdownDescription": "Base domain to be use for Runme app"
          },
          "runme.app.enableShare": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "Enable app buttons in notebook terminal"
          },
          "runme.app.panel.runme.cloud": {
            "type": "string",
            "default": "",
            "scope": "window",
            "markdownDescription": "Customize cloud panel assignment"
          },
          "runme.app.forceNewWindow": {
            "type": "boolean",
            "default": true,
            "scope": "window",
            "markdownDescription": "Whether to open the folder/workspace in a new window or the same"
          }
        }
      }
    ],
    "walkthroughs": [
      {
        "id": "runme.welcome",
        "title": "Get Started with creating Runme Notebooks",
        "description": "Runme allows to create interactive runbooks for VS Code.",
        "steps": [
          {
            "id": "runme.welcome.why",
            "title": "Why Runme?",
            "description": "Runme provides developers with the ability to navigate workflows center around code repositories by making Readme markdown files interactive and smart",
            "media": {
              "markdown": "walkthroughs/0-intro.md"
            }
          },
          {
            "id": "runme.welcome.features",
            "title": "Key Features",
            "description": "Get the best of Runme by learning the key features",
            "media": {
              "markdown": "walkthroughs/1-features.md"
            }
          },
          {
            "id": "runme.welcome.annotations",
            "title": "Cell Configuration",
            "description": "To provide the best possible README (interactive markdown) experience to your users, be sure to configure your document's cells.",
            "media": {
              "markdown": "walkthroughs/2-annotations.md"
            }
          },
          {
            "id": "runme.welcome.learn",
            "title": "Learn more",
            "media": {
              "markdown": "walkthroughs/3-learn-more.md"
            }
          }
        ]
      }
    ],
    "taskDefinitions": [
      {
        "type": "runme",
        "required": [
          "fileUri",
          "command"
        ],
        "properties": {
          "fileUri": {
            "type": "string",
            "description": "File Uri of the markdown file to call the command on"
          },
          "command": {
            "type": "string",
            "description": "name of the command to execute"
          },
          "isBackground": {
            "type": "boolean",
            "default": false,
            "description": "If set to true the task is run within the background and not awaited to exit"
          },
          "closeTerminalOnSuccess": {
            "type": "boolean",
            "default": true,
            "description": "If set to true terminal window is being closed on successful execution"
          },
          "cwd": {
            "type": "string",
            "description": "working directory where Runme executes the task"
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "runme",
          "title": "Runme",
          "icon": "assets/runme-logo-sidebar.svg"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "runme.launcher",
          "type": "tree",
          "name": "Runme Notebooks",
          "visibility": "collapsed"
        }
      ],
      "runme": [
        {
          "id": "runme.cloud",
          "type": "webview",
          "name": "Cloud",
          "visibility": "visible"
        },
        {
          "id": "runme.chat",
          "type": "webview",
          "name": "Chat",
          "visibility": "collapsed"
        },
        {
          "id": "runme.search",
          "type": "webview",
          "name": "Search",
          "visibility": "collapsed"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "runme.launcher",
        "contents": "Open a workspace/folder to display Runme files here"
      }
    ],
    "keybindings": [
      {
        "command": "runme.keybinding.noop",
        "key": "m",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
      },
      {
        "command": "runme.keybinding.noop",
        "key": "y",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
      },
      {
        "key": "F",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "K",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "J",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "A",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "B",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "D D",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "Z",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "S",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "C",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "X",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "V",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "shift+L",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "O",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      },
      {
        "key": "L",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "command": "runme.keybinding.noop"
      }
    ]
  },
  "scripts": {
    "build": "run-s build:dev",
    "build:dev": "webpack --mode development --node-env development",
    "build:prod": "webpack --mode production --node-env production",
    "bundle": "vsce package --pre-release --no-git-tag-version --no-update-package-json -o \"./runme-$npm_package_version.vsix\"",
    "download:wasm": "node .github/scripts/downloadWasm.js",
    "esmify": "echo '{ \"type\": \"module\" }' >> ./out/package.json",
    "postinstall": "run-s postinstall:*",
    "postinstall:wasm": "npm run download:wasm && npm run download:binary",
    "postinstall:husky": "husky install",
    "test": "runme run test",
    "watch": "npm run build:dev -- --watch",
    "vscode:prepublish": "npm run prepare-binary",
    "download:binary": "npm run prepare-binary",
    "prepare-binary": "node .github/scripts/downloadAndExtract.js -b bin -n runme",
    "codegen": "RUNME_TOKEN=$(runme token --api-url https://api.staging.stateful.com --insecure) graphql-codegen --config codegen.ts"
  },
  "devDependencies": {
    "@graphql-codegen/cli": "5.0.0",
    "@graphql-codegen/client-preset": "^4.1.0",
    "@graphql-codegen/typescript": "4.0.1",
    "@octokit/rest": "^19.0.13",
    "@types/node": "^16.11.7",
    "@types/uuid": "^9.0.3",
    "@types/vscode": "1.72.0",
    "@types/vscode-notebook-renderer": "^1.72.0",
    "@types/webpack-env": "^1.18.1",
    "@typescript-eslint/eslint-plugin": "^6.6.0",
    "@typescript-eslint/parser": "^6.6.0",
    "@vitest/coverage-v8": "^0.34.3",
    "@vscode/vsce": "^2.21.0",
    "@wdio/cli": "^8.16.5",
    "@wdio/local-runner": "^8.16.5",
    "@wdio/mocha-framework": "^8.16.3",
    "@wdio/spec-reporter": "^8.16.3",
    "eslint": "^8.48.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-import-resolver-typescript": "^3.6.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-unicorn": "^48.0.1",
    "eslint-plugin-unused-imports": "^3.0.0",
    "expect-webdriverio": "^4.2.7",
    "fork-ts-checker-webpack-plugin": "^9.0.0",
    "husky": "^8.0.3",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.0.3",
    "runme": "^3.0.2",
    "semver": "^7.5.4",
    "tar-fs": "^3.0.4",
    "ts-loader": "^9.4.4",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2",
    "unzipper": "^0.10.14",
    "vitest": "^0.34.3",
    "vscode-uri": "^3.0.7",
    "wdio-vscode-service": "^5.2.1",
    "webdriverio": "^8.16.5",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@apollo/client": "^3.8.3",
    "@buf/grpc_grpc.community_timostamm-protobuf-ts": "^2.9.1-20230830152835-a5b3a068eb8c.1",
    "@buf/stateful_runme.community_timostamm-protobuf-ts": "^2.9.1-20231108001143-5b6562ce6044.2",
    "@protobuf-ts/grpc-transport": "^2.9.1",
    "@protobuf-ts/runtime": "^2.9.1",
    "@protobuf-ts/runtime-rpc": "^2.9.1",
    "@vercel/client": "^13.0.1",
    "@vscode/vscode-languagedetection": "^1.0.22",
    "@vscode/webview-ui-toolkit": "^1.2.2",
    "clipboardy": "^4.0.0",
    "cross-fetch": "^4.0.0",
    "dotenv": "^16.3.1",
    "filenamify": "^6.0.0",
    "get-port": "^7.0.0",
    "got": "^11.8.2",
    "graphql": "^16.8.0",
    "lit": "^3.0.0",
    "octokit": "^3.1.0",
    "tangle": "^4.0.0",
    "undici": "^5.23.0",
    "uuid": "^9.0.0",
    "vscode-telemetry": "^1.0.2",
    "xterm": "^5.3.0",
    "xterm-addon-fit": "^0.8.0",
    "xterm-addon-serialize": "^0.11.0",
    "xterm-addon-unicode11": "^0.6.0",
    "xterm-addon-web-links": "^0.9.0",
    "xterm-headless": "^5.3.0",
    "yaml": "^2.3.2",
    "zod": "^3.22.2"
  }
}
